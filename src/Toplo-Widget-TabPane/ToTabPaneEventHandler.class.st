Class {
	#name : #ToTabPaneEventHandler,
	#superclass : #BlCustomEventHandler,
	#category : #'Toplo-Widget-TabPane-TabPane'
}

{ #category : #'event handling' }
ToTabPaneEventHandler >> applyPaneDestroyerOfTabButton: aTabButton [

	| innerPane |
	innerPane := aTabButton holder innerPane.
	innerPane ifNil: [ ^ self ].
	aTabButton paneDestroyer ifNotNil: [ :destroyer |
			destroyer
				cull: innerPane
				cull: aTabButton
				cull: aTabButton holder node
				cull: aTabButton holder.
			aTabButton holder innerPane: nil ]
]

{ #category : #'event handling' }
ToTabPaneEventHandler >> checkableGroupChangedEvent: anEvent [

	| tabPane body button innerPane |
	tabPane := anEvent currentTarget.
	body := tabPane body.
	body removeChildren.
	anEvent checkedList size = 1 ifFalse: [ ^ self ].
	button := anEvent checkedList anyOne.
	innerPane := button holder innerPane.
	innerPane ifNotNil: [
			body addChild: innerPane.
			^ self ].
	innerPane := ToPane new
		             matchParent;
		             yourself.
	button paneDestroyer ifNotNil: [ :destroyer |
			innerPane
				addEventHandlerOn: BlElementRemovedFromParentEvent
				doOnce: [ self applyPaneDestroyerOfTabButton: button ] ].
	button paneBuilder
		cull: innerPane
		cull: button
		cull: button holder node
		cull: button holder.
	button holder innerPane: innerPane.
	body addChild: innerPane
]

{ #category : #'api - accessing' }
ToTabPaneEventHandler >> eventsToHandle [

	^ { ToCheckableGroupChangedEvent.  ToItemRemovedFromBarEvent. }
]

{ #category : #'event handling' }
ToTabPaneEventHandler >> itemRemovedFromBarEvent: anEvent [

	anEvent wasSelected ifFalse: [ ^ self ].
	anEvent currentTarget dataSource ifEmpty: [
		self applyPaneDestroyerOfTabButton: anEvent item ]
]
